@page "/Customer/Delete/{Id:guid}"

@using Mc2.CrudTest.Domain.Models
@using Mc2.CrudTest.Domain.ViewModels

@inject HttpClient Http
@inject NavigationManager NavigationManager

<h2>Delete User</h2>
<br />
<div class="form-group">
    <h4>Do you want to delete this user?</h4>
    <table class="table">
        <tbody>
            <tr>
                <td>Firstname</td>
                <td>@customer.FirstName</td>
            </tr>
            <tr>
                <td>Lastname</td>
                <td>@customer.LastName</td>
            </tr>
            <tr>
                <td>Birth</td>
                <td>@customer.DateOfBirth</td>
            </tr>
            <tr>
                <td>Phone Number</td>
                <td>@customer.PhoneNumber</td>
            </tr>
            <tr>
                <td>E-mail</td>
                <td>@customer.Email</td>
            </tr>
            <tr>
                <td>Bank Account Number</td>
                <td>@customer.BankAccountNumber</td>
            </tr>
        </tbody>
    </table>
</div>
<div class="form-group">
    <input type="submit" value="Delete" @onclick="(async () => await RemoveUser(customer.Id))" class="btn btn-danger" />
    <input type="submit" value="Cancel" @onclick="(() => GoToCustomer())" class="btn btn-warning" />
</div>

@code {
    [Parameter]
    public Guid Id { get; set; }
    Customer customer = new Customer();
    protected ResultWithDataViewModel<Customer> getDatabackendAnswer = new();
    protected ResultViewModel backendAnswer = new();

    protected override async Task OnInitializedAsync()
    {
        getDatabackendAnswer = await Http.GetFromJsonAsync<ResultWithDataViewModel<Customer>>("api/Customer/" + Id);

        customer = getDatabackendAnswer.Data;
    }
    protected async Task RemoveUser(Guid id)
    {
        HttpResponseMessage responseMessage = await Http.DeleteAsync("api/Customer/" + id);

        var jsonString = await responseMessage.Content.ReadAsStringAsync();

        backendAnswer = System.Text.Json.JsonSerializer.Deserialize<ResultViewModel>(jsonString);

        if (backendAnswer.Succeeded)
        {
            GoToCustomer();
        }
    }
    void GoToCustomer()
    {
        NavigationManager.NavigateTo("/Customer");
    }
}